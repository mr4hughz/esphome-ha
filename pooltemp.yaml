# GPIO5

# v2.0 nfc pool temperature esp32-wroom 
# This description is to make the code easier to read
# # so this device is as "dumb" as possible, handeling should be done by home assistant (if possible)
################# 
# the temp sensors (2x ds18b20) are located in a bypass pipe of 50mm or 2" or (in 1/2" schrewhome with thermowell fixture of 50mm) 
# a USB 18650 powerbank is used as powersupply and backup when using the wall socket for other purpose(s)  
#
# One should get 2 sensors who read equal temp at different temperatures before installing 
# calibrate or adjust the sensors before (see example down below) 
# 
# When using solar or other heating the in/out will be at least 1 degree (C) different what is called Delta T(emperature)
# when circulating water the difference should be zero 
# when cooling the delta T is less then zero 
# 
################# 
# board esp32-wroom-32 
# 
# 3,3v pin (power)
# EN to ground = reset button 
# D0 = programming pin (do not connect)
# D2 = internal led pin (do not connect)
# D5 = internal  pin (do not connect)
# D6,7,8,9,10,11, = internal  pin (do not connect)
# D15 = internal  pin (do not connect)
# D34.35,vp.vn = input only no internal pull up
# GPIO1  = txd internal flashing (use gpio17 instead)
# GPIO3  = rxd internal flashing (use gpio16 instead)
# 
# Voltage divider for 18650 battery-ups board, either 1 or 2 pins (ADC needed)
#  connect to + 47k 
#  connect to adc pin(s)
#  connect to - 47k 
#
# voltage reader(s) for 18650 accu pack 
# voltage divider with resistors = ? + ? 
# adc pins 1-4 (1 per 18650 .. or 1 for all 4)  
# 
################
substitutions:
  web_port: "80"
  web_version: "2"
  platform: ESP32
  board: nodemcu-32s # https://esphome.io/devices/nodemcu_esp32.html ESP32-DevkitC
  core: dev
  arduino: recommended
  
  ## Identity
  devicename: pooltemp1
  upper_devicename: PoolTemp1
  logger_level: DEBUG # default DEBUG, options = NONE,ERROR,WARN,INFO,VERBOSE,VERY_VERBOSE
  # https://esphome.io/components/logger.html?highlight=logger

  ###### Pins
  dallas_pin: GPIO5

esphome:
  name: $devicename
#  name_add_mac_suffix: true # this sucks 
  on_boot:
    then:
      - script.execute: boot_script


script:
  - id: boot_script
    then:
      - logger.log:
          format: "boot_script started"
          level: INFO
      - logger.log:
          format: "waiting for api connection"
          level: INFO
      - wait_until:
          condition:
            api.connected:
      - logger.log:
          format: "api is connected"
          level: INFO
#      - homeassistant.service:
#          service: light.turn_on
#          data:
#            entity_id: light.livingroom

esp32:
  board: $board
  framework:
    type: arduino

# Enable logging
logger:
  level: $logger_level
  logs:
    mqtt.component: DEBUG
    mqtt.client: ERROR

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_ecryption_key 

ota:
  password: !secret ota_password 

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  use_address: !secret IP_adrress112 
  manual_ip:
    static_ip: !secret IP_adrress112
    gateway: !secret IP_gateway
    subnet: !secret IP_subnet
    dns1: !secret IP_dns1
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: $devicename " Hotspot"
    password: !secret wifi_AP_key

text_sensor:
  - platform: wifi_info
    ip_address:
      name: ${devicename} IP Address
    ssid:
      name: ${devicename} Connected SSID
    bssid:
      name: ${devicename} Connected BSSID
    mac_address:
      name: ${devicename} Mac Wifi Address
    scan_results:
      name: ${devicename} Latest Scan Results

captive_portal:

time:
  - platform: homeassistant
    id: homeassistant_time
    
web_server:
  port: $web_port
  version: 2

dallas:
  - pin: $dallas_pin
  # update every 5 min
    update_interval: 300s

switch:
  - platform: restart
    name: ${devicename}" Restart"

sensor:
  - platform: uptime
    name: UptimeSensor
    update_interval: 300s
  - platform: dallas
    address: 0x24012062b81cc028
    name: PoolTemp1In #pooltemp_DS18B20_1_bypass_in
    id: bypass1in
    filters:
   #- offset: 2.0
     - filter_out: 85.0
  - platform: dallas
    address: 0x09012062d255bf28
    name: PoolTemp1Out #pooltemp_DS18B20_2_bypass_uit
    id: bypass1out
    filters:
     #- offset: 2.0
     - filter_out: 85.0
     - calibrate_linear:
    # bypass uit -> bypass_in
       - 21.125 -> 21.0625
       - 23.437 -> 22.6875
       - 25.30953 -> 25.75
       - 26.77931 -> 26.4375
  - platform: template
    name: PooltempDeltaTempBypass
    lambda: |- 
      return (id(bypass1out).state) - (id(bypass1in).state);
    unit_of_measurement: Â°C
    update_interval: 150s
